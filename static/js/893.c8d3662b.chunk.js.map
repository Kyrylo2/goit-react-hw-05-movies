{"version":3,"file":"static/js/893.c8d3662b.chunk.js","mappings":"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","sources":["Services/axios-API-service.js","components/MoviesGrid/MoviesGrid.styled.js","components/MovieGridItem/MovieGridItem.styled.js","components/MovieGridItem/MovieGridItem.jsx","components/MoviesGrid/MoviesGrid.jsx","components/Searchbar/Searchbar.styled.js","resources/search_icon.svg","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL_TRANDING = 'https://api.themoviedb.org/3/trending/movie/week';\nconst BASE_URL_SEARCH_QUERY = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL_MOVIE_DETAILS = 'https://api.themoviedb.org/3/movie/';\n\nconst KEY = 'c5d50af4186bf21fa991895725448c9f';\n\nexport async function getTrandingMovies() {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n    },\n  };\n\n  try {\n    const {\n      data: { results },\n    } = await axios.get(BASE_URL_TRANDING, axiosOptions);\n\n    return results;\n  } catch (err) {\n    throw new Error(`Sorry, please try again.`);\n  }\n}\n\nexport async function getFilmsByQuery(searchQuery, page) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      query: searchQuery,\n      page: page,\n      include_adult: false,\n    },\n  };\n\n  try {\n    const {\n      data: { results, total_results },\n    } = await axios.get(BASE_URL_SEARCH_QUERY, axiosOptions);\n\n    if (total_results === 0) {\n      throw new Error(\n        `Sorry, there are no pictures for the \"${searchQuery}\". Please try again.`\n      );\n    }\n\n    return results;\n  } catch (err) {}\n}\n\nexport async function getMovieDetails(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}`,\n      axiosOptions\n    );\n\n    return data;\n  } catch (err) {\n    throw new Error(`Sorry, there is no movie details available`);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}/credits`,\n      axiosOptions\n    );\n\n    return data;\n  } catch (err) {\n    throw new Error(`Sorry, there is no movie casts available`);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}/reviews`,\n      axiosOptions\n    );\n\n    return data.results;\n  } catch (err) {\n    throw new Error(`Sorry, there is no movie reviews available`);\n  }\n}\nexport const API = {\n  getTrandingMovies,\n  getFilmsByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import styled from 'styled-components';\n\nexport const MovieGrid = styled.section`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 2rem;\n`;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Card = styled(NavLink)`\n  position: relative;\n  width: 300px;\n  height: 450px;\n  overflow: hidden;\n  background-color: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n\n  &:hover {\n    transform: translateY(-10px);\n    box-shadow: 0 12px 16px rgba(0, 0, 0, 0.2);\n  }\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.3);\n  border-radius: 10px;\n  position: relative;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n\nexport const RatingCircle = styled.div`\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background-color: ${({ rating }) => {\n    if (rating >= 7) return 'green';\n    if (rating >= 4) return 'orange';\n    return 'red';\n  }};\n  color: white;\n  font-size: 14px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 0;\n  right: 0;\n  margin: 10px;\n`;\n\nexport const Overlay = styled.div`\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  /* padding: 1rem; */\n  background-color: rgba(0, 0, 0, 0.6);\n  color: #fff;\n  transform: translateY(100%);\n  transition: all 0.3s ease;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n\n  ${Card}:hover & {\n    transform: translateY(0);\n  }\n`;\n\nexport const Title = styled.h2`\n  font-size: 1.5rem;\n  margin-top: 1rem;\n  margin-bottom: 0;\n  text-align: center;\n`;\n\n// export const Rating = styled.span`\n//   position: absolute;\n//   top: -10px;\n//   right: -10px;\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   width: 40px;\n//   height: 40px;\n//   font-size: 1.2rem;\n//   font-weight: bold;\n//   border-radius: 50%;\n//   background-color: ${({ rating }) => {\n//     if (rating >= 7) return '#3f9d2f';\n//     if (rating >= 5) return '#f3c719';\n//     return '#db0a00';\n//   }};\n//   color: #fff;\n// `;\n\nexport const Year = styled.p`\n  font-size: 1rem;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  text-align: center;\n`;\n","import {\n  Title,\n  Card,\n  Overlay,\n  Poster,\n  RatingCircle,\n  Year,\n} from './MovieGridItem.styled';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport defaultImage from 'images/no-poster1.webp';\n\nconst MoviesGridItem = ({ movie }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      <Card\n        key={movie.id}\n        to={`/movies/${movie.id}`}\n        state={{ from: location }}\n      >\n        <Poster\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n              : defaultImage\n          }\n          alt={movie.title}\n        />\n        <RatingCircle rating={movie.vote_average}>\n          {movie.vote_average}\n        </RatingCircle>\n        <Overlay>\n          <Title>{movie.title}</Title>\n          <Year>{movie.release_date}</Year>\n        </Overlay>\n      </Card>\n    </>\n  );\n};\n\nMoviesGridItem.propTypes = {\n  movie: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default MoviesGridItem;\n","import PropTypes from 'prop-types';\nimport { MovieGrid } from './MoviesGrid.styled';\nimport MoviesGridItem from 'components/MovieGridItem/MovieGridItem';\n\nconst MoviesGrid = ({ moviesArr }) => {\n  return (\n    <MovieGrid>\n      {moviesArr.map(movie => (\n        <MoviesGridItem movie={movie} key={movie.id} />\n      ))}\n    </MovieGrid>\n  );\n};\n\nMoviesGrid.propTypes = {\n  moviesArr: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n      release_date: PropTypes.string,\n      vote_average: PropTypes.number.isRequired,\n    })\n  ).isRequired,\n};\n\nexport default MoviesGrid;\n","import styled from '@emotion/styled';\n\n/*\n * Стили компонента Searchbar\n */\nexport const SearchbarContainer = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  /* background-color: #3f51b5; */\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n\n  background: linear-gradient(215deg, deepskyblue, darkviolet, blue);\n  background-size: 180% 180%;\n  animation: gradient-animation 5s ease-in-out infinite;\n\n  @keyframes gradient-animation {\n    0% {\n      background-position: 0% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n`;\n\n/*\n * Стили компонента SearchForm\n */\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSearchIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512px\",\n    id: \"Layer_1\",\n    style: {\n      enableBackground: \"new 0 0 512 512\"\n    },\n    viewBox: \"0 0 512 512\",\n    width: \"512px\",\n    xmlSpace: \"preserve\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M448.3,424.7L335,311.3c20.8-26,33.3-59.1,33.3-95.1c0-84.1-68.1-152.2-152-152.2c-84,0-152,68.2-152,152.2  s68.1,152.2,152,152.2c36.2,0,69.4-12.7,95.5-33.8L425,448L448.3,424.7z M120.1,312.6c-25.7-25.7-39.8-59.9-39.8-96.3  s14.2-70.6,39.8-96.3S180,80,216.3,80c36.3,0,70.5,14.2,96.2,39.9s39.8,59.9,39.8,96.3s-14.2,70.6-39.8,96.3  c-25.7,25.7-59.9,39.9-96.2,39.9C180,352.5,145.8,338.3,120.1,312.6z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSearchIcon);\nexport default __webpack_public_path__ + \"static/media/search_icon.729e04b0698c757fc36eceab3010c36b.svg\";\nexport { ForwardRef as ReactComponent };","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport {\n  SearchbarContainer,\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styled';\n\nimport searchIcon from '../../resources/search_icon.svg';\n\nfunction Searchbar({ value, onSubmitProp }) {\n  const [input, setInput] = useState('');\n\n  useEffect(() => {\n    setInput(value);\n  }, [value]);\n\n  const handleStateChange = e => {\n    setInput(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (input.trim() === '') {\n      return toast.warn('Please enter a valid input');\n    }\n\n    onSubmitProp(input);\n    setInput('');\n  };\n\n  return (\n    <SearchbarContainer>\n      <SearchForm onSubmit={handleSubmit}>\n        <SearchFormButton\n          type=\"submit\"\n          style={{ backgroundImage: `url(${searchIcon})` }}\n        >\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n        </SearchFormButton>\n\n        <SearchFormInput\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={input}\n          placeholder=\"Search images and photos\"\n          onChange={handleStateChange}\n        />\n      </SearchForm>\n    </SearchbarContainer>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmitProp: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import Searchbar from 'components/Searchbar';\nimport { getFilmsByQuery } from 'Services/axios-API-service';\n\nimport { useEffect, useState } from 'react';\n// import useQuery from 'hooks/useQuery';\n\nimport MovieGrid from 'components/MoviesGrid/MoviesGrid';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  // const [query, setQuery] = useQuery();\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n\n  const [query, setQuery] = useSearchParams();\n  const currentQuery = query.get('query') ?? '';\n\n  const onSubmit = query => {\n    setQuery(query ? { query: query } : {});\n    setPage(1);\n    setMovies([]);\n  };\n\n  useEffect(() => {\n    const fetchData = async (data, page) => {\n      try {\n        const response = await getFilmsByQuery(data, page);\n\n        setMovies(response);\n      } catch (err) {}\n    };\n\n    if (!query.get('query')) return;\n\n    fetchData(currentQuery, page);\n  }, [currentQuery, page, query]);\n\n  return (\n    <>\n      <Searchbar value={currentQuery} onSubmitProp={onSubmit} />\n      {movies?.length > 0 && (\n        <>\n          <h1>Here's what I found for the query \"{query.get('query')}\"</h1>\n          <MovieGrid moviesArr={movies} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["BASE_URL_TRANDING","BASE_URL_SEARCH_QUERY","BASE_URL_MOVIE_DETAILS","KEY","getTrandingMovies","axiosOptions","params","api_key","axios","results","data","Error","getFilmsByQuery","searchQuery","page","language","query","include_adult","total_results","getMovieDetails","movieId","getMovieCredits","getMovieReviews","MovieGrid","styled","Card","NavLink","Poster","RatingCircle","rating","Overlay","Title","Year","movie","location","useLocation","to","id","state","from","src","poster_path","defaultImage","alt","title","vote_average","release_date","moviesArr","map","SearchbarContainer","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","value","onSubmitProp","useState","input","setInput","useEffect","onSubmit","e","preventDefault","trim","toast","type","style","backgroundImage","searchIcon","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","setPage","movies","setMovies","useSearchParams","setQuery","currentQuery","get","fetchData","response","length"],"sourceRoot":""}