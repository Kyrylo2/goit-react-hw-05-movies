{"version":3,"file":"static/js/449.ebe4b218.chunk.js","mappings":"mTAEMA,EAAoB,mDACpBC,EAAwB,4CACxBC,EAAyB,sCAEzBC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,qGACCC,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHR,kBAWOK,EAAAA,EAAAA,IAAUR,EAAmBK,GAXpC,2BASDI,KAAQC,EATP,EASOA,QAASC,EAThB,EASgBA,cACjBC,EAVC,EAUDA,OAEFC,QAAQC,IAAIF,EAAQD,GACpBE,QAAQC,IAAIJ,GAbT,kBAcIA,GAdJ,kCAgBHG,QAAQC,IAAR,MAhBG,iFAoBA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAA+BC,EAAaC,GAA5C,oFACCZ,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTe,SAAU,QACVC,MAAOH,EACPC,KAAMA,EACNG,eAAe,IAPd,kBAcOZ,EAAAA,EAAAA,IAAUP,EAAuBI,GAdxC,uBAaDI,KAAQC,EAbP,EAaOA,QAGY,IAhBnB,EAagBC,cAbhB,uBAiBK,IAAIU,MAAJ,gDACqCL,EADrC,yBAjBL,iCAsBIN,GAtBJ,kCAwBHG,QAAQC,IAAR,MAxBG,iFA4BA,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,kFACClB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,IAHR,kBAQoBK,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACOqB,GAC5BlB,GAVC,uBAQKI,EARL,EAQKA,KAKRI,QAAQC,IAAIL,GAbT,kBAcIA,GAdJ,kCAgBHI,QAAQC,IAAR,MAhBG,iFAoBA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAA+BD,GAA/B,kFACClB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTe,SAAU,UAJT,kBASoBV,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACOqB,EADP,YAErBlB,GAXC,uBASKI,EATL,EASKA,KATL,kBAcIA,GAdJ,gCAgBHI,QAAQC,IAAR,MAhBG,gFAoBA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAA+BF,GAA/B,kFACClB,EAAe,CACnBC,OAAQ,CACNC,QAASJ,EACTe,SAAU,UAJT,kBASoBV,EAAAA,EAAAA,IAAA,UAClBN,GADkB,OACOqB,EADP,YAErBlB,GAXC,uBASKI,EATL,EASKA,KATL,kBAcIA,EAAKC,SAdT,gCAgBHG,QAAQC,IAAR,MAhBG,gF,mJC9FMY,EAAaC,EAAAA,GAAAA,IAAH,8MAUVC,EAAeD,EAAAA,GAAAA,IAAH,qGAMZE,EAAeF,EAAAA,GAAAA,IAAH,uGAOZG,EAAaH,EAAAA,GAAAA,IAAH,oCAIVI,EAAiBJ,EAAAA,GAAAA,GAAH,gGAOdK,EAAaL,EAAAA,GAAAA,EAAH,0EAMVM,EAAeN,EAAAA,GAAAA,IAAH,qFAMZO,EAAgBP,EAAAA,GAAAA,IAAH,iF,mBCJ1B,MA/BA,YAA+C,IAApBQ,EAAmB,EAAnBA,gBACzB,EAIIA,EAHFC,eAAkBC,EADpB,EACoBA,YAAaC,EADjC,EACiCA,OAAQC,EADzC,EACyCA,SACvCC,EAEEL,EAFFK,QACAC,EACEN,EADFM,WAGIC,EAAO,IAAIC,KAAKF,GAEtB,OACE,UAACf,EAAD,YACE,UAACE,EAAD,YACE,SAACC,EAAD,CACEe,IACEP,EAAW,yCAC2BA,GAClCQ,EAENC,IAAI,iBAEN,UAAChB,EAAD,YACE,SAACC,EAAD,UAAiBQ,KACjB,SAACP,EAAD,UAAaU,EAAKK,uBAAmC,QAEvD,SAACd,EAAD,UAAeK,QAEjB,SAACJ,EAAD,UAAgBM,MAGrB,EC5BD,MAXA,YAA0C,IAAnBQ,EAAkB,EAAlBA,eAErB,OADAnC,QAAQC,IAAIkC,IAEV,yBACGA,EAAeC,KAAI,SAAAC,GAAM,OACxB,SAAC,EAAD,CAAiBf,gBAAiBe,GADV,KAK/B,ECUD,EAjBgB,WACd,IAAQ3B,GAAY4B,EAAAA,EAAAA,MAAZ5B,QACR,GAAsC6B,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACR9B,EAAAA,EAAAA,IAAgBF,GAASiC,MAAK,SAAAC,GAC5BH,EAAeG,EAChB,GACF,GAAE,CAAClC,KAEJgC,EAAAA,EAAAA,YAAU,WACR1C,QAAQC,IAAIuC,EACb,GAAE,CAACA,IAEGA,IAAe,SAAC,EAAD,CAAYL,eAAgBK,GACnD,C","sources":["Services/axios-API-service.js","components/ReviewsList/ReviesListItem/ReviesListItem.styled.js","components/ReviewsList/ReviesListItem/ReviesListItem.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL_TRANDING = 'https://api.themoviedb.org/3/trending/movie/week';\nconst BASE_URL_SEARCH_QUERY = 'https://api.themoviedb.org/3/search/movie';\nconst BASE_URL_MOVIE_DETAILS = 'https://api.themoviedb.org/3/movie/';\n\nconst KEY = 'c5d50af4186bf21fa991895725448c9f';\n\nexport async function getTrandingMovies() {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n    },\n  };\n\n  try {\n    const {\n      data: { results, total_results },\n      status,\n    } = await axios.get(BASE_URL_TRANDING, axiosOptions);\n    console.log(status, total_results);\n    console.log(results);\n    return results;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getFilmsByQuery(searchQuery, page) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n      query: searchQuery,\n      page: page,\n      include_adult: false,\n    },\n  };\n\n  try {\n    const {\n      data: { results, total_results },\n    } = await axios.get(BASE_URL_SEARCH_QUERY, axiosOptions);\n\n    if (total_results === 0) {\n      throw new Error(\n        `Sorry, there are no pictures for the \"${searchQuery}\". Please try again.`\n      );\n    }\n\n    return results;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getMovieDetails(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}`,\n      axiosOptions\n    );\n\n    console.log(data);\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getMovieCredits(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}/credits`,\n      axiosOptions\n    );\n\n    return data;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function getMovieReviews(movieId) {\n  const axiosOptions = {\n    params: {\n      api_key: KEY,\n      language: 'en-US',\n    },\n  };\n\n  try {\n    const { data } = await axios.get(\n      `${BASE_URL_MOVIE_DETAILS}${movieId}/reviews`,\n      axiosOptions\n    );\n\n    return data.results;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport const API = {\n  getTrandingMovies,\n  getFilmsByQuery,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import styled from 'styled-components';\n\nexport const ReviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const ReviewHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const ReviewAvatar = styled.img`\n  width: 50px;\n  height: 50px;\n  margin-right: 10px;\n  border-radius: 50%;\n`;\n\nexport const ReviewInfo = styled.div`\n  flex: 1;\n`;\n\nexport const ReviewUsername = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  font-weight: bold;\n  color: #333;\n`;\n\nexport const ReviewDate = styled.p`\n  margin: 0;\n  font-size: 14px;\n  color: #666;\n`;\n\nexport const ReviewRating = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n  color: #ff6f00;\n`;\n\nexport const ReviewContent = styled.div`\n  margin-top: 10px;\n  font-size: 16px;\n  color: #333;\n`;\n","import React from 'react';\nimport {\n  ReviewItem,\n  ReviewHeader,\n  ReviewAvatar,\n  ReviewInfo,\n  ReviewUsername,\n  ReviewDate,\n  ReviewRating,\n  ReviewContent,\n} from './ReviesListItem.styled';\nimport defaultImage from 'images/no-poster1.webp';\n\nfunction ReviewsListItem({ reviewsListItem }) {\n  const {\n    author_details: { avatar_path, rating, username },\n    content,\n    created_at,\n  } = reviewsListItem;\n\n  const date = new Date(created_at);\n\n  return (\n    <ReviewItem>\n      <ReviewHeader>\n        <ReviewAvatar\n          src={\n            avatar_path\n              ? `https://image.tmdb.org/t/p/w500${avatar_path}`\n              : defaultImage\n          }\n          alt=\"User avatar\"\n        />\n        <ReviewInfo>\n          <ReviewUsername>{username}</ReviewUsername>\n          <ReviewDate>{date.toLocaleDateString()}</ReviewDate>{' '}\n        </ReviewInfo>\n        <ReviewRating>{rating}</ReviewRating>\n      </ReviewHeader>\n      <ReviewContent>{content}</ReviewContent>\n    </ReviewItem>\n  );\n}\n\nexport default ReviewsListItem;\n","import React from 'react';\nimport ReviewsListItem from './ReviesListItem/ReviesListItem';\n\nfunction ReviewsList({ reviewsListArr }) {\n  console.log(reviewsListArr);\n  return (\n    <div>\n      {reviewsListArr.map(review => (\n        <ReviewsListItem reviewsListItem={review} />\n      ))}\n    </div>\n  );\n}\n\nexport default ReviewsList;\n","import { getMovieReviews } from 'Services/axios-API-service';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviesList from 'components/ReviewsList';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsList, setReviewsList] = useState(null);\n\n  useEffect(() => {\n    getMovieReviews(movieId).then(response => {\n      setReviewsList(response);\n    });\n  }, [movieId]);\n\n  useEffect(() => {\n    console.log(reviewsList);\n  }, [reviewsList]);\n\n  return reviewsList && <ReviesList reviewsListArr={reviewsList} />;\n};\n\nexport default Reviews;\n"],"names":["BASE_URL_TRANDING","BASE_URL_SEARCH_QUERY","BASE_URL_MOVIE_DETAILS","KEY","getTrandingMovies","axiosOptions","params","api_key","axios","data","results","total_results","status","console","log","getFilmsByQuery","searchQuery","page","language","query","include_adult","Error","getMovieDetails","movieId","getMovieCredits","getMovieReviews","ReviewItem","styled","ReviewHeader","ReviewAvatar","ReviewInfo","ReviewUsername","ReviewDate","ReviewRating","ReviewContent","reviewsListItem","author_details","avatar_path","rating","username","content","created_at","date","Date","src","defaultImage","alt","toLocaleDateString","reviewsListArr","map","review","useParams","useState","reviewsList","setReviewsList","useEffect","then","response"],"sourceRoot":""}